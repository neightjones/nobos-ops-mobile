name: Release
on:
  - push
jobs:
  publish:
    name: Expo Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: asdf install
        uses: asdf-vm/actions/install@v1
        env:
          NODEJS_CHECK_SIGNATURES: "no"
      - name: Set global node version
        run: asdf global nodejs 12.18.1
      - uses: expo/expo-github-action@v5
        with:
          expo-version: 3.x
          expo-username: ${{ secrets.EXPO_USERNAME }}
          expo-password: ${{ secrets.EXPO_PASSWORD }}
          expo-cache: true
      - name: Install dependencies
        run: npm ci
      - name: Semantic Release
        uses: codfish/semantic-release-action@master
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Expo publish
        run: |
          expo publish
  build-ios:
    name: Build iOS app
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: asdf install
        uses: asdf-vm/actions/install@v1
        env:
          NODEJS_CHECK_SIGNATURES: "no"
      - name: Publish iOS
        env:
          TURTLE_VERSION: 0.15.0
          EXPO_USERNAME: ${{ secrets.EXPO_USERNAME }}
          EXPO_PASSWORD: ${{ secrets.EXPO_PASSWORD }}
          EXPO_IOS_DIST_P12_PASSWORD: ${{ secrets.EXPO_IOS_DIST_P12_PASSWORD }}
          EXPO_IOS_TEAM_ID: ${{ secrets.EXPO_IOS_TEAM_ID }}
          EXPO_IOS_DIST_BASE64: ${{ secrets.EXPO_IOS_DIST_BASE64 }}
          EXPO_IOS_PROVISION_BASE64: ${{ secrets.EXPO_IOS_PROVISION_BASE64 }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
        run: |
          npm ci
          echo $EXPO_IOS_DIST_BASE64 > dist.p12.base64 && base64 --decode dist.p12.base64 > dist.p12
          echo $EXPO_IOS_PROVISION_BASE64 > app.mobileprovision.base64 && base64 --decode app.mobileprovision.base64 > app.mobileprovision
          yarn global add turtle-cli@$TURTLE_VERSION
          turtle setup:ios
          turtle build:ios \
            --type=archive \
            --team-id=$EXPO_IOS_TEAM_ID \
            --dist-p12-path=dist.p12 \
            --provisioning-profile-path=app.mobileprovision \
            --output=nobos-ops.ipa
          xcrun altool --validate-app \
            --file nobos-ops.ipa \
            --type ios \
            --username tim.raptorrunner@gmail.com \
            --password @env:APPLE_PASSWORD
          xcrun altool --upload-app \
            --file nobos-ops.ipa \
            --type ios \
            --username tim.raptorrunner@gmail.com \
            --password @env:APPLE_PASSWORD
      - name: Upload ios artifact
        if: steps.set_output.outputs.BUILD_APPS == 'true'
        uses: actions/upload-artifact@v1
        with:
          name: ios-archive
          path: app/nobos-ops.ipa
